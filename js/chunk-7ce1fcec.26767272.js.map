{"version":3,"sources":["webpack:///./src/components/UserTweetList.vue?f590","webpack:///src/components/UserTweetList.vue","webpack:///./src/components/UserTweetList.vue?8c82","webpack:///./src/components/UserTweetList.vue?2036","webpack:///./src/components/UserTweetList.vue?544f"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_e","_l","tweet","key","id","attrs","name","params","userId","User","avatar","_v","_s","account","_f","createdAt","tweetId","description","on","$event","handleReplyModal","replyCount","isLike","stopPropagation","preventDefault","deleteLike","addLike","likeCount","tweetActive","afterReplySubmit","staticRenderFns","components","NewReplyModal","Spinner","mixins","props","type","required","data","userTweets","isLoading","created","fetchTweets","watch","newValue","methods","userAPI","Toast","icon","title","tweetsAPI","response","console","payload","allTweets","map","component"],"mappings":"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","file":"js/chunk-7ce1fcec.26767272.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tweet-list\"},[(_vm.isLoading)?_c('Spinner'):_vm._e(),_vm._l((_vm.userTweets),function(tweet){return _c('div',{key:tweet.id,staticClass:\"tweet-card d-flex\"},[_c('router-link',{attrs:{\"to\":{ name: 'user-profile', params: { userId: tweet.User.id } }}},[_c('img',{staticClass:\"avatar\",attrs:{\"src\":tweet.User.avatar,\"alt\":\"\"}})]),_c('div',{staticClass:\"tweet-info d-flex flex-column\"},[_c('div',{staticClass:\"first-line\"},[_c('span',{staticClass:\"text-name\"},[_vm._v(_vm._s(tweet.User.name))]),_c('span',{staticClass:\"text-account\"},[_vm._v(\"@\"+_vm._s(tweet.User.account)+\"．\"+_vm._s(_vm._f(\"fromNow\")(tweet.createdAt)))])]),_c('router-link',{attrs:{\"to\":{\n          name: 'single-tweet',\n          params: { tweetId: tweet.id, tweet: tweet },\n        }}},[_c('div',{staticClass:\"tweet-content\"},[_vm._v(\" \"+_vm._s(tweet.description)+\" \")])]),_c('div',{staticClass:\"action my-1\"},[_c('span',{staticClass:\"icon-wrap\"},[_c('button',{staticClass:\"btn-reply\",attrs:{\"data-bs-toggle\":\"modal\",\"data-bs-target\":\"#new-reply-modal\"},on:{\"click\":function($event){return _vm.handleReplyModal(tweet)}}},[_c('img',{staticClass:\"reply\",attrs:{\"src\":require(\"./../assets/icon_reply.png\"),\"alt\":\"\"}})]),_c('span',{staticClass:\"text-like-reply\"},[_vm._v(_vm._s(tweet.replyCount))])]),_c('span',{staticClass:\"icon-wrap ms-4\"},[(!tweet.isLike)?_c('img',{staticClass:\"like\",attrs:{\"src\":require(\"../assets/icon_like.png\"),\"alt\":\"\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.addLike(tweet.id)}}}):_c('img',{staticClass:\"like\",attrs:{\"src\":require(\"../assets/icon_like_fill.png\"),\"alt\":\"\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.deleteLike(tweet.id)}}}),_c('span',{staticClass:\"text-like-reply\"},[_vm._v(_vm._s(tweet.likeCount))])])])],1)],1)}),_c('NewReplyModal',{attrs:{\"tweet\":_vm.tweetActive},on:{\"after-reply-submit\":_vm.afterReplySubmit}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"tweet-list\">\r\n    <Spinner v-if=\"isLoading\" />\r\n    <div class=\"tweet-card d-flex\" v-for=\"tweet in userTweets\" :key=\"tweet.id\">\r\n      <router-link\r\n        :to=\"{ name: 'user-profile', params: { userId: tweet.User.id } }\"\r\n      >\r\n        <img :src=\"tweet.User.avatar\" class=\"avatar\" alt=\"\" />\r\n      </router-link>\r\n      <div class=\"tweet-info d-flex flex-column\">\r\n        <div class=\"first-line\">\r\n          <span class=\"text-name\">{{ tweet.User.name }}</span>\r\n          <span class=\"text-account\"\r\n            >@{{ tweet.User.account }}．{{ tweet.createdAt | fromNow }}</span\r\n          >\r\n        </div>\r\n        <router-link\r\n          :to=\"{\r\n            name: 'single-tweet',\r\n            params: { tweetId: tweet.id, tweet },\r\n          }\"\r\n        >\r\n          <div class=\"tweet-content\">\r\n            {{ tweet.description }}\r\n          </div></router-link\r\n        >\r\n        <div class=\"action my-1\">\r\n          <span class=\"icon-wrap\">\r\n            <button\r\n              class=\"btn-reply\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#new-reply-modal\"\r\n              @click=\"handleReplyModal(tweet)\"\r\n            >\r\n              <img src=\"./../assets/icon_reply.png\" alt=\"\" class=\"reply\" />\r\n            </button>\r\n            <span class=\"text-like-reply\">{{ tweet.replyCount }}</span>\r\n          </span>\r\n          <span class=\"icon-wrap ms-4\">\r\n            <img\r\n              src=\"../assets/icon_like.png\"\r\n              class=\"like\"\r\n              alt=\"\"\r\n              v-if=\"!tweet.isLike\"\r\n              @click.stop.prevent=\"addLike(tweet.id)\"\r\n            />\r\n            <img\r\n              src=\"../assets/icon_like_fill.png\"\r\n              class=\"like\"\r\n              alt=\"\"\r\n              v-else\r\n              @click.stop.prevent=\"deleteLike(tweet.id)\"\r\n            />\r\n            <span class=\"text-like-reply\">{{ tweet.likeCount }}</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <NewReplyModal\r\n      :tweet=\"tweetActive\"\r\n      @after-reply-submit=\"afterReplySubmit\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NewReplyModal from \"./../components/NewReplyModal.vue\";\r\nimport userAPI from \"./../apis/user\";\r\nimport tweetsAPI from \"../apis/tweets\";\r\nimport Spinner from \"./../components/Spinner.vue\";\r\nimport { fromNowFilter } from \"../utils/mixins\";\r\nimport { Toast } from \"../utils/helpers\";\r\n\r\nexport default {\r\n  name: \"userTweetList\",\r\n  components: {\r\n    NewReplyModal,\r\n    Spinner,\r\n  },\r\n  mixins: [fromNowFilter],\r\n  props: {\r\n    userId: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      userTweets: [],\r\n      isLoading: true,\r\n      tweetActive: {\r\n        User: {}\r\n      },\r\n    };\r\n  },\r\n\r\n  created() {\r\n    const userId = this.userId;\r\n    this.fetchTweets(userId);\r\n  },\r\n  watch: {\r\n    userId(newValue) {\r\n      this.fetchTweets(newValue);\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchTweets(userId) {\r\n      try {\r\n        const { data } = await userAPI.getUserTweets({ userId });\r\n        this.userTweets = data;\r\n        this.isLoading = false;\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n        });\r\n      }\r\n    },\r\n    async addLike(id) {\r\n      try {\r\n        const response = await tweetsAPI.addLike({ id });\r\n        // const { data } = response\r\n        if (response.data.status === \"error\") {\r\n          throw new Error();\r\n        }\r\n        this.userTweets = this.userTweets.map((tweet) => {\r\n          if (tweet.id === id) {\r\n            return {\r\n              ...tweet,\r\n              isLike: true,\r\n              likeCount: tweet.likeCount + 1,\r\n            };\r\n          }\r\n          console.log(tweet);\r\n          return tweet;\r\n        });\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n        });\r\n      }\r\n    },\r\n    async deleteLike(id) {\r\n      try {\r\n        const response = await tweetsAPI.deleteLike({ id });\r\n        if (response.data.status === \"error\") {\r\n          throw new Error();\r\n        }\r\n\r\n        this.userTweets = this.userTweets.map((tweet) => {\r\n          if (+tweet.id === +id) {\r\n            return {\r\n              ...tweet,\r\n              isLike: false,\r\n              likeCount: tweet.likeCount - 1,\r\n            };\r\n          }\r\n          return tweet;\r\n        });\r\n      } catch (error) {\r\n        Toast.fire({\r\n          icon: \"error\",\r\n          title: error.response.data.message,\r\n        });\r\n      }\r\n    },\r\n    afterReplySubmit(payload) {\r\n      const { tweetId, replyCount } = payload;\r\n      this.allTweets = this.allTweets.map((tweet) => {\r\n        if (tweet.id !== tweetId) {\r\n          return tweet;\r\n        }\r\n        return {\r\n          ...tweet,\r\n          replyCount,\r\n        };\r\n      });\r\n    },\r\n    handleReplyModal(tweet) {\r\n      this.tweetActive = { ...tweet };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n.tweet-card {\r\n  padding: 10px 15px;\r\n  /* height: 145px; */\r\n  border-bottom: 1px solid #e6ecf0;\r\n}\r\n.tweet-card:hover {\r\n  /* cursor: pointer; */\r\n  box-shadow: 0 0 1px 0 var(--orange);\r\n}\r\n.tweet-content {\r\n  margin-top: 6px;\r\n  max-width: 510px;\r\n  font-size: 15px;\r\n  text-overflow: ellipsis;\r\n}\r\n.reply,\r\n.like {\r\n  width: 15px;\r\n  height: 15px;\r\n}\r\n.like:hover {\r\n  cursor: pointer;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserTweetList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserTweetList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserTweetList.vue?vue&type=template&id=2ff482c1&scoped=true&\"\nimport script from \"./UserTweetList.vue?vue&type=script&lang=js&\"\nexport * from \"./UserTweetList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserTweetList.vue?vue&type=style&index=0&id=2ff482c1&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2ff482c1\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserTweetList.vue?vue&type=style&index=0&id=2ff482c1&scoped=true&lang=css&\""],"sourceRoot":""}